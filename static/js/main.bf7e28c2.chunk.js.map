{"version":3,"sources":["components/header.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","class","href","Component","App","classNameName","id","classNAme","style","marginBottom","marginLeft","Button","variant","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAGqBA,G,uLAEb,OACI,4BAAQC,UAAU,UACd,wBAAIA,UAAU,SAAd,cACA,yBAAKC,MAAM,UACP,4BACI,4BAAI,uBAAGC,KAAK,QAAR,iBACJ,4BAAI,uBAAGA,KAAK,QAAR,UACJ,4BAAI,uBAAGA,KAAK,OAAR,gB,GATQC,c,QCwErBC,MApEf,WACE,OACE,yBAAKC,cAAc,OACjB,kBAAC,EAAD,MAIF,wBAAIL,UAAU,KAAKM,GAAG,QAAtB,wCACA,uBAAGN,UAAU,SAAb,8DACA,uBAAGA,UAAU,SAAb,+CACA,uBAAGA,UAAU,SAAb,kCACA,uBAAGA,UAAU,SAAb,wHAEA,uBAAGA,UAAU,KAAKM,GAAG,QAArB,gDACA,uBAAGN,UAAU,SAAb,gKACA,uBAAGA,UAAU,SAAb,wFACA,uBAAGA,UAAU,SAAb,4NAEA,uBAAGA,UAAU,MAAb,sDACA,uBAAGA,UAAU,SAAb,kFACA,uBAAGO,UAAU,SAAb,0PACA,uBAAGP,UAAU,SAAb,sJACA,uBAAGA,UAAU,SAAb,iIAA0C,uBAAGA,UAAU,MAAME,KAAK,uCAAxB,WAA1C,SAAoH,uBAAGF,UAAU,MAAME,KAAK,0CAAxB,aAApH,sEAIA,uBAAGF,UAAU,MAAb,sDACA,uBAAGA,UAAU,SAAb,iFAAkC,0BAAMA,UAAU,UAAhB,8CAAlC,kCACA,uBAAGA,UAAU,SAAb,sQACA,uBAAGA,UAAU,SAAb,+JAA+C,0BAAMA,UAAU,UAAhB,8CAA/C,SAAuF,0BAAMA,UAAU,UAAhB,sBAAvF,4BACA,uBAAGA,UAAU,SAAb,4NAEA,uBAAGA,UAAU,MAAb,0CACA,uBAAGA,UAAU,SAAb,oJACA,uBAAGA,UAAU,SAAb,sNACA,uBAAGA,UAAU,SAAb,8LAEA,uBAAGA,UAAU,MAAb,0CACA,uBAAGA,UAAU,SAAb,wOACA,uBAAGA,UAAU,SAAb,kLACA,uBAAGA,UAAU,SAAb,wLAEA,uBAAGA,UAAU,MAAb,iCACA,uBAAGA,UAAU,SAAb,oHACA,uBAAGA,UAAU,SAAb,qOACA,uBAAGA,UAAU,SAAb,+HAEA,uBAAGA,UAAU,KAAKQ,MAAO,CAACC,aAAc,GAAIC,WAAY,KAAMJ,GAAG,OAAjE,oEACA,uBAAGJ,KAAK,sCAAsCF,UAAU,UACxD,kBAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,MAA/B,YAGC,uBAAGX,KAAK,yDAAyDF,UAAU,QAC3E,kBAACW,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,MAA5B,UAED,uBAAGX,KAAK,kCAAkCF,UAAU,QACpD,kBAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,MAA/B,SAGC,uBAAGX,KAAK,yCAAyCF,UAAU,QAC3D,kBAACW,EAAA,EAAD,CAAQC,QAAQ,SAASC,KAAK,MAA9B,gBCvDeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bf7e28c2.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './header.css';\r\n\r\nexport default class Header extends Component {\r\n    render(){\r\n        return (\r\n            <header className=\"header\">\r\n                <h1 className=\"shion\">Shion note</h1>\r\n                <nav class=\"pc-nav\">\r\n                    <ul>\r\n                        <li><a href=\"ziko\">introduction</a></li>\r\n                        <li><a href=\"hoby\">hobby</a></li>\r\n                        <li><a href=\"sns\">link</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './start.css';\nimport Header from './components/header'\nimport { Button } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div classNameName=\"App\">\n      <Header />\n    {/* test */}\n    \n    \n    <h2 className=\"h1\" id=\"ziko\">～自己紹介～</h2>\n    <p className=\"first\">本名：松元士温/shion matsumoto</p>\n    <p className=\"first\">年齢：17歳/2003年/07/30</p>\n    <p className=\"first\">職業：学生</p>\n    <p className=\"first\">趣味：ゲーム/音楽鑑賞/映画鑑賞/会話/外出/BBQ</p>\n\n    <p className=\"h1\" id=\"hoby\">～趣味1|ゲーム～</p>\n    <p className=\"first\">ゲームは基本的にマルチができたら大体何でも好きです。</p>\n    <p className=\"first\">最近はAPEX/CSGO/Fortniteを主にしています</p>\n    <p className=\"first\">一人の時は大体”マインクラフト”をしています（一人ですることはまずない）</p>\n\n    <p className=\"h1\">～趣味2|音楽鑑賞～</p>\n    <p className=\"first\">主にHIPHOPなんかを聞いています</p>\n    <p classNAme=\"first\">最近好きなアーティストさんは”creepy nuts\"\"不可思議/wonderboy””神門””OZworld”などをきいています！</p>\n    <p className=\"first\">J-POPでは”藤井風””優里””Mrs.GREEN APPLE”などが好きです！</p>\n    <p className=\"first\">もしおすすめの曲、アーティストさんがいれば<a className=\"sns\" href=\"https://twitter.com/deemontuyoinoka\">Twitter</a>や<a className=\"sns\" href=\"https://www.instagram.com/shion.m.219/\">instagram</a>などで教えてください！</p>\n    \n\n\n    <p className=\"h1\">～趣味3|映画鑑賞～</p>\n    <p className=\"first\">初めて映画を観たのは三歳で<span className=\"name-1\">バイオハザード</span>を観ました</p>\n    <p className=\"first\">このころの僕はまだ何が怖いのかよくわからなかったのでただぼーっと観てるだけでした（笑）</p>\n    <p className=\"first\">それから映画が好きになって一番印象に残っている作品は<span className=\"name-1\">ナルニア国物語</span>や<span className=\"name-1\">Marvel作品</span>などです</p>\n    <p className=\"first\">特にナルニア国物語は全シリーズを数十回リピートしてみるほど好きです（笑）</p>\n\n    <p className=\"h1\">～趣味4|会話～</p>\n    <p className=\"first\">え～、会話が趣味ってなんか変な感じしますね（笑）</p>\n    <p className=\"first\">これはまぁ会話が好きというか人といるのが好きみたいな感じですかね（笑）</p>\n    <p className=\"first\">やっぱ人（友達）と一緒にいるのはなんか楽しいからいいですよね！</p>\n\n    <p className=\"h1\">～趣味5|外出～</p>\n    <p className=\"first\">昨年まではインドア派だったんですが服や家具を見るのが好きになってしまったので</p>\n    <p className=\"first\">最近ではアウトドア寄りのインドア派になりつつあります（笑）</p>\n    <p className=\"first\">最近、ラウワンやカラオケ行ってないのでいきたいですね（泣笑）</p>\n\n    <p className=\"h1\">～趣味6|BBQ～</p>\n    <p className=\"first\">BBQ（焼肉）は毎年3回はやるほどに好きです</p>\n    <p className=\"first\">BBQ（焼肉）では焼き奉行になってしまうので絶対に誰にもトングは渡しません（笑）</p>\n    <p className=\"first\">来年はキャンプに行ってBBQしてみたいですね！</p>\n\n    <p className=\"h1\" style={{marginBottom: 30, marginLeft: 270}} id=\"sns\">～SNS|ゲームアカウント～</p>\n    <a href=\"https://twitter.com/deemontuyoinoka\" className=\"link-1\">\n    <Button variant=\"primary\" size=\"sm\">twitter</Button>\n        </a>\n\n     <a href=\"https://steamcommunity.com/profiles/76561198804543860/\" className=\"sns2\" >\n     <Button variant=\"dark\" size=\"sm\">steam</Button>\n        </a>  \n    <a href=\"https://line.me/ti/p/rDfv0I59Xo\" className=\"sns2\" >\n    <Button variant=\"success\" size=\"sm\">line</Button>\n      </a>\n\n     <a href=\"https://www.instagram.com/shion.m.219/\" className=\"sns2\">\n     <Button variant=\"danger\" size=\"sm\">Instagram</Button>\n       </a>     \n    </div>\n  )  \n}\n  \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}